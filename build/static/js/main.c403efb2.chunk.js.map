{"version":3,"sources":["action/index.js","Components/Task/Task.js","Components/DragDrop/DragDrop.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["todoList","type","value","progressList","doneList","Task","item","id","console","log","useState","editText","setEditText","dispatch","useDispatch","useSelector","state","x","y","z","window","onclick","event","modal","document","getElementById","target","style","display","className","draggable","text","data-testid","onClick","data","split","splice","index","htmlFor","onChange","e","editTodo","moves","edits","push","editProgress","editDone","map","move","edit","creation","DragDrop","createdText","setCreatedText","useEffect","onRefresh","onOpen","onbeforeunload","localStorage","setItem","JSON","stringify","temp1","parse","getItem","temp2","temp3","a","listOfTasks","getElementsByClassName","lists","i","task","count","addEventListener","innerText","setTimeout","j","list","preventDefault","this","backgroundColor","newProgress","newTodoList","newDone","length","App","Boolean","location","hostname","match","initialState","rootReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c403efb2.chunk.js","sourcesContent":["const setTodo = todoList => ({ \n        type: 'SET_TODO',\n        value :todoList\n})\nconst setProgress = progressList => ({ \n        type: 'SET_PROGRESS',\n        value :progressList\n})\nconst setDone = doneList => ({ \n        type: 'SET_DONE',\n        value :doneList\n});\n\nexport default{\n        setTodo,\n        setProgress,\n        setDone,\n    }","import React, {useState} from 'react';\nimport './Task.css';\nimport index from \"../../action/index\";\nimport {useDispatch, useSelector} from 'react-redux';\n\n\n\nexport default function Task({item,id}) { \n  console.log(item);\n    const [editText,setEditText] = useState('edit text');\n    const dispatch = useDispatch();\n    const {x,y,z} = useSelector( state => ({x:state.todoList,y:state.progressList,z:state.doneList }) ); \n    const todoList = [...x];\n    const progressList = [...y];\n    const doneList = [...z];\n    const onEdit = () =>{\n      var modal = document.getElementById(id+'modal');\n      modal.style.display = \"block\";\n    }\n    const onView = () =>{\n      var modal = document.getElementById(id+'view');\n      modal.style.display = \"block\";\n    }\n    const onDelete = () =>{\n      const data = id.split('-');\n      if(data[1]==='one'){\n        todoList.splice(data[0], 1);\n        dispatch(index.setTodo([...todoList]));\n      }else if(data[1]==='two'){\n        progressList.splice(data[0], 1);\n        dispatch(index.setProgress([...progressList]));\n      }else if(data[1]==='three'){\n        doneList.splice(data[0], 1);\n        dispatch(index.setDone([...doneList]));\n      }\n      var tassk = document.getElementById(id+'task');\n      tassk.style.display = \"none\";\n    }\n    const onConfirm = () =>{\n      const data = id.split('-');\n      if(data[1]==='one'){\n        todoList.splice(data[0], 1);\n        let editTodo = {\n          'text' : editText,\n          'moves' : [...x[data[0]].moves],\n          'edits' : [...x[data[0]].edits, x[data[0]].text],\n          'creation' : 'In Todo'\n        }\n        todoList.push(editTodo);\n        dispatch(index.setTodo(todoList));\n      }else if(data[1]==='two'){\n        progressList.splice(data[0], 1);\n        let editProgress = {\n          'text' : editText,\n          'moves' : [...y[data[0]].moves],\n          'edits' : [...y[data[0]].edits, y[data[0]].text],\n          'creation' : 'In Todo'\n        }\n        progressList.push(editProgress);\n        dispatch(index.setProgress(progressList));\n      }else if(data[1]==='three'){\n        doneList.splice(data[0], 1);\n        let editDone = {\n          'text' : editText,\n          'moves' : [...z[data[0]].moves],\n          'edits' : [...z[data[0]].edits, z[data[0]].text],\n          'creation' : 'In Todo'\n        }\n        doneList.push(editDone);\n        dispatch(index.setDone(doneList));\n      }\n      var modal = document.getElementById(id+'modal');\n      modal.style.display = \"none\";\n      setEditText('add text');\n    }  \n    const onClose = () =>{\n      var modal = document.getElementById(id+'modal');\n      modal.style.display = \"none\";\n      setEditText('add text');\n    }\n    const closeView = () =>{\n      var modal = document.getElementById(id+'view');\n      modal.style.display = \"none\";\n    }\n    window.onclick = function(event) {\n      var modal = document.getElementById(id+'modal');\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n      setEditText('add text');\n    }\n  return (\n    <div className=\"Task\" id ={id+'task'} draggable=\"true\">\n      <div className='content'>\n        <p className='mark' id ={id}>{item? item.text : 'no text'}</p>\n      </div>\n      <div className='options'>\n      <button className='view' data-testid  onClick={onView}> view</button>\n      <button className='edit' data-testid onClick={onEdit}> Edit</button>\n      <button className='delete' data-testid  onClick={onDelete}> Delete</button>\n      </div>\n      <div id={id+'modal'} className=\"modal-edit\"> \n          <div className=\"modal-content-edit\">\n          <label className=\"modal-element\" htmlFor=\"usr\">Edit Task</label>\n          <input type=\"text\" className=\"modal-element\" value={editText} onChange={(e)=>setEditText(e.target.value)}></input>\n          <div className='modal-element'>\n          <button className='confirm' onClick={onConfirm}>Confirm</button>\n          <button className='close' onClick={onClose}>Close</button>\n          </div>\n       </div>\n    </div>\n    <div id={id+'view'} className=\"modal-view\"> \n          <div className=\"modal-content-view\">\n          <label className=\"modal-element\" htmlFor=\"usr\">Task History</label>\n            <h4>Movements : {item ? item.moves.map(move => <p>{move}</p>):'no moves'}</h4>\n            <h5>Edits : {item? item.edits.map(edit => <p>{edit}</p>):'no edits'}</h5>\n            <h5>Creation : {item ? item.creation:'no creation'}</h5>\n          <div className='modal-element'>\n          <button className='close' onClick={closeView}>Close</button>\n          </div>\n       </div>\n    </div>\n    </div>\n  );\n}\n\n","import React, {useEffect, useState} from 'react';\nimport './DragDrop.css';\nimport Task from '../Task/Task'\nimport index from \"../../action/index\";\nimport {useDispatch,useSelector} from 'react-redux';\n\n\n\nexport default function DragDrop() {\n  const [createdText,setCreatedText] = useState('add text');\n  const {x,y,z} = useSelector( state => ({x:state.todoList,y:state.progressList,z:state.doneList }) );\n  const dispatch = useDispatch(); \n  var todoList = [...x];\n  var progressList = [...y];\n  var doneList = [...z]; \n  useEffect(()=>{\n    onRefresh();\n    },[])\n  useEffect(()=>{\n    onOpen();\n  },[x,y,z]);\n  window.onbeforeunload = function(event)\n  {\n\n    localStorage.setItem(\"todo\", JSON.stringify(x));\n    localStorage.setItem(\"progress\", JSON.stringify(y));\n    localStorage.setItem(\"done\", JSON.stringify(z));\n  };\n  const onRefresh = ()=>{\n   const temp1 = JSON.parse(localStorage.getItem(\"todo\"));\n   const temp2 = JSON.parse(localStorage.getItem(\"progress\"));\n   const temp3 = JSON.parse(localStorage.getItem(\"done\"));\n    dispatch(index.setTodo([...temp1]));\n    dispatch(index.setProgress([...temp2]));\n    dispatch(index.setDone([...temp3]));\n    localStorage.setItem(\"todo\", []);\n    localStorage.setItem(\"progress\", []);\n    localStorage.setItem(\"done\", []);\n   }\n\n  const onOpen = async () =>{\n    const listOfTasks = document.getElementsByClassName('Task');\n    const lists = document.getElementsByClassName('list');\n    let draggedTask = null;\n    let text = null;\n    let data = null;\n    for(let i = 0 ; i < listOfTasks.length ;i++){\n      const task = listOfTasks[i];\n      let count =0;\n      task.addEventListener('dragstart' , function(){\n        draggedTask = task;\n        count=count+1;\n        text = task.getElementsByClassName('mark')[0].innerText;\n        data = task.getElementsByClassName('mark')[0].id.split(\"-\");\n        setTimeout(function (){\n          if(data){\n          if(data[1]==='one'){\n            todoList.splice(data[0], 1);\n            dispatch(index.setTodo([...todoList]));\n          }else if(data[1]==='two'){\n            progressList.splice(data[0], 1);\n            dispatch(index.setProgress([...progressList]));\n          }\n        }\n        },0)\n      })\n      task.addEventListener('dragend' , function(){\n        setTimeout(function (){\n          task.style.display = 'flex';\n          draggedTask = null;\n          text = null;\n          data = null;\n        },0)\n      })\n      for(let j = 0 ; j < lists.length ; j++){\n        const list = lists[j];     \n        list.addEventListener('dragover', function(e){\n          e.preventDefault();\n        })\n        list.addEventListener('dragenter', function(e){\n          e.preventDefault();\n          this.style.backgroundColor = 'rgba(0, 0, 0, 0.2)';\n        })\n        list.addEventListener('dragleave', function(e){\n          e.preventDefault();\n          this.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n        })\n        list.addEventListener('drop', function(e){\n           e.preventDefault();\n          if(data && count===1){\n          if(j===1 && data[1]==='one'){\n            let newProgress = {\n              'text' : text,\n              'moves' : [...x[data[0]].moves, 'Progress'],\n              'edits' : [...x[data[0]].edits],\n              'creation' : 'In Todo'\n            }\n            console.log('sadadssd');\n            progressList.push(newProgress);\n            dispatch(index.setProgress(progressList));\n          }else if(j===0 && data[1]==='two'){\n            let newTodoList = {\n              'text' : text,\n              'moves' : [...y[data[0]].moves, 'Todo'],\n              'edits' : [...y[data[0]].edits],\n              'creation' : 'In Todo'\n            }\n            todoList.push(newTodoList);\n            dispatch(index.setTodo(todoList));\n          }else if(j===2 && data[1]==='two'){\n            let newDone = {\n              'text' : text,\n              'moves' : [...y[data[0]].moves, 'Done'],\n              'edits' : [...y[data[0]].edits],\n              'creation' : 'In Todo'\n            }\n            doneList.push(newDone);\n            dispatch(index.setDone(doneList));\n          }else{\n            if(data[1]==='one'){\n              let newTodoList = {\n                'text' : text,\n                'moves' : [...x[data[0]].moves],\n                'edits' : [...x[data[0]].edits],\n                'creation' : 'In Todo'\n              }\n              todoList.push(newTodoList);\n              dispatch(index.setTodo(todoList));\n            }else if(data[1]==='two'){\n              let newProgress = {\n                'text' : text,\n                'moves' : [...y[data[0]].moves],\n                'edits' : [...y[data[0]].edits],\n                'creation' : 'In Todo'\n              }\n              progressList.push(newProgress);\n              dispatch(index.setProgress(progressList));\n            }\n          }\n          this.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n        }\n        })\n      }\n    }\n  }\n  const onCreate = () =>{\n    var modal = document.getElementById(\"myModal\");\n    modal.style.display = \"block\";\n  }\n  const onConfirm = () =>{\n    let newTodoList = {\n      text : createdText,\n      moves : ['Todo',],\n      edits : [],\n      creation : 'In Todo'\n    }\n    todoList.push(newTodoList);\n    dispatch(index.setTodo(todoList));\n    //dispatch(index.setTodo([...todoList, ...newTodoList]));\n    var modal = document.getElementById(\"myModal\");\n    modal.style.display = \"none\";\n    setCreatedText('add text');\n  }\n  const onClose = () =>{\n    var modal = document.getElementById(\"myModal\");\n    modal.style.display = \"none\";\n    setCreatedText('add text');\n  }\n  window.onclick = function(event) {\n    var modal = document.getElementById(\"myModal\");\n    if (event.target === modal) {\n      modal.style.display = \"none\";\n      setCreatedText('add text');\n    }\n  }\n  return (\n    <div className=\"DragDrop\" >\n      <header className=\"DragDrop-header\">\n       <h1>Drag and Drop</h1>\n      </header>\n      <div className='Main'>\n          <div className='todo list' id='first-list'>\n              <div className='todo-header'>\n                  <h3>Todo</h3>\n                  <div className='add'>\n                  <button className='style' id=\"myBtn\" onClick={onCreate}> Add Task</button>\n                  </div>\n              </div>\n              <div className='todo-body'>\n                {todoList.map((item,id) => <Task item={item} id={id+'-one'} />)}\n              </div>\n          </div>\n          <div className='progress list' id='middle-list'>\n              <div className='progress-header'>\n              <h3>In Progess</h3>\n              </div>\n              <div className='progress-body'>\n              {progressList.map((item,id) => <Task item={item} id={id+'-two'} />)}\n              </div>\n          </div>\n          <div className='done list' id='last-list'>\n              <div className='done-header'>\n              <h3>Done</h3>\n              </div>\n              <div className='done-body'>\n              {doneList.map((item,id) => <Task item={item} id={id+'-three'} />)}\n              </div>\n          </div>\n      </div>\n      <div id=\"myModal\" className=\"modal\"> \n          <div className=\"modal-content\">\n          <label className=\"modal-element\" htmlFor=\"usr\" >Create Task</label>\n          <input type=\"text\" className=\"modal-element\" value={createdText} onChange={(e)=>setCreatedText(e.target.value)}></input>\n          <div className='modal-element'>\n          <button className='confirm' onClick={onConfirm}>Confirm</button>\n          <button className='close' onClick={onClose}>Close</button>\n          </div>\n          </div>\n    </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport './App.css';\n\nimport DragDrop from './Components/DragDrop/DragDrop'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DragDrop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n    todoList: [],\n    progressList: [],\n    doneList: [],\n  };\nconst rootReducer= (state = initialState, action)=>{\n    // eslint-disable-next-line default-case\n    switch(action.type){\n        case 'SET_TODO' :\n        return Object.assign({}, state,{todoList: action.value});\n        //return { ...state,todoList: action.value }\n        case 'SET_PROGRESS' :\n        return Object.assign({}, state,{progressList: action.value});\n        case 'SET_DONE' :\n        return Object.assign({}, state,{doneList: action.value});\n        default:\n        return state;\n    }\n} \nexport default rootReducer; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}